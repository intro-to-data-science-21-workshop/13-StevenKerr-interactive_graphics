library(xaringan)
inf_mr()
library(Cairo)
library(cairoDevice)
library(tidyverse)
library(kableExtra)
install.pacakges('Cairo', 'cairoDevice')
install.packages('Cairo', 'cairoDevice')
install.package('Cairo')
install.packages('Cairo')
inf_mr()
library(tinytex)
tlmgr_update()
capabilities()
inf_mr()
install.packages("httpuv", repos="http://cran.rstudio.com/", dependencies=TRUE)
inf_mr
inf_mr()
[[ $(brew cask list | grep xquartz) ]] && echo $(which xquartz)
# /opt/X11/bin/xquartz
[[ $(brew cask list | grep xquartz) ]] && echo $(which xquartz)
# /opt/X11/bin/xquartz
inf_mr()
library(xaringan)
inf_mr()
inf_mr
inf_mr()
### “The ~~simple~~complex graph has brought more information to the data analyst’s mind than any other device.” — Julian Kath & Steve Kerr
inf_mr()
library(xaringan)
infinite_moon_reader()
library(xaringan)
infinite_moon_reader()
library(xaringan)
inf_mr()
inf_mr
inf_mr()
summon_remark()
names(list_css())
names(xaringan::list_css())
names(xaringan:::list_css())
theme_xaringan
theme_xaringan()
inf_mr()
?xaringan::moon_reader
---
# Interactive Graphics with plotly
g
library(xaringanthemer)
install.packages('xaringanthemer')
library(xaringan)
infinite_moon_reader()
---
title: "Introduction to Data Science"
subtitle: "Interactive Plotting with plotly in R"
author: "Steve Kerr & Julian Kath"
institute: "Hertie School"
date: "`r Sys.Date()`"
output:
xaringan::moon_reader:
css: [default, red_theme.css] #consider editing theme
lib_dir: libs
includes:
after_body: insert_logo.html
nature:
highlightStyle: github
highlightLines: true
countIncrementalSlides: false
seal: false
---
class: hide-logo
background-image: url(https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Plotly_logo_for_digital_final_%286%29.png/1600px-Plotly_logo_for_digital_final_%286%29.png)
background-position: center
background-size: contain
---
class: hide-logo
background-image: url(https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Plotly_logo_for_digital_final_%286%29.png/1600px-Plotly_logo_for_digital_final_%286%29.png)
background-position: right
background-size: 50% 50%
t
inf_mr()
View(df)
g
library(xaringan)
inf_mr()
t
library(xaringan)
inf_mr()
library(xaringan)
inf_mr()
library(xaringan)
inf_mr()
hot100page <- "https://www.billboard.com/charts/hot-100"
hot100 <- read_html(hot100page)
library(tidyverse)
hot100page <- "https://www.billboard.com/charts/hot-100"
hot100 <- read_html(hot100page)
library(rvest   )
hot100page <- "https://www.billboard.com/charts/hot-100"
hot100 <- read_html(hot100page)
body_nodes <- hot100 %>%
html_node("body")
---
# Conclusion
body_nodes <- hot100 %>%
html_node("body")
body_nodes
body_nodes <- hot100 %>%
html_node("body") %>%
html_children()
body_nodes
body_nodes %>%
html_children()
body_nodes %>%
html_children()
rank <- hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class, 'chart-element__rank__number')]") %>%
rvest::html_text()
rank
artist <- hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class, 'chart-element__information__artist')]") %>%
rvest::html_text()
artist
title <- hot100 %>%
rvest::html_nodes('body') %>%
xml2::xml_find_all("//span[contains(@class, 'chart-element__information__song')]") %>%
rvest::html_text()
title
chart_df <- data.frame(rank, artist, title)
knitr::kable(chart_df  %>% head(10))
tibble(chart_df)
browseURL("http://www.jstatsoft.org/issue/archive")
inf_mr()
install.packages('kableExtra')
inf_mr()
library(xaringan)
inf_mr()
library(plotly)
colors
colors()
library(xaringan)
inf_mr()
tibble(libraries = c("plotly.R", "rbokeh", "trellisopejs", "dygraphs", "ggvis", "ggplot2"),
github_stars = c(2100, 293, 217, 328, 700, 5100),
github_watch = c(287, 35, 11, 42, 128, 318),
forks = c(1600, 65, 35, 196, 185, 1800))
tibble(libraries = c("plotly.R", "rbokeh", "trellisopejs", "dygraphs", "ggvis", "ggplot2"),
github_stars = c(2100, 293, 217, 328, 700, 5100),
github_watch = c(287, 35, 11, 42, 128, 318),
forks = c(1600, 65, 35, 196, 185, 1800))
viz_data
library(xaringan)
inf_mr()
library(xaringan)
inf_mr()
library(palmerpenguins)
inf_mr()
library(xaringan)
inf_mr()
library(xaringan)
inf_mr()
install.packages('ggridges')
library(xaringan)
inf_mr()
library(dplyr)
library(plotly)
library(gapminder)
library(xaringan)
inf_mr()
sessionInfo()
data.frame(libraries = c("plotly.R", "rbokeh", "trellisopejs", "dygraphs", "ggvis", "ggplot2"),
github_stars = c(2100, 293, 217, 328, 700, 5100),
github_watch = c(287, 35, 11, 42, 128, 318),
forks = c(1600, 65, 35, 196, 185, 1800)) -> viz_data
viz_data
plot_ly(viz_data, x = ~libraries,
y = ~github_stars, type = "bar",
name = "GitHub Stars", hoverinfo = "text",
text = ~paste0("</br> Library: ", libraries,
"</br> Stars: ", github_stars,
"</br> Watchers: ", github_watch,
"</br> Forks: ", forks)) %>%
add_trace(y = ~forks, name = "GitHub Forks") %>%
add_trace(y = ~github_watch, name = "GitHub Watchers") %>%
layout(
title = "Plotting libraries in R",
xaxis = list(title = "Library"),
yaxis = list(title = "Number of Forks/ Stars/ Watchers"),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)',
autosize = FALSE, width = 550,
height = 400,
margin = list(l = 60,
r = 50,
b = 5,
t = 25,
pad = 5))
library(dplyr)
library(plotly)
library(gapminder)
gapminder  %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
title = "GDP pre capita vs. Life Expectancy 1952-2007",
xaxis = list(
type = "log"
),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)'
)
inf_mr()
inf_mr(moon = )
inf_mr()
gapminder  %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
marker = list(size = ~pop)
) %>%
layout(
title = "GDP pre capita vs. Life Expectancy 1952-2007",
xaxis = list(
type = "log"
),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)'
)
library(xaringan)
inf_mr()
library(dplyr)
library(plotly)
library(gapminder)
gapminder  %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
marker = list(size = ~pop)
) %>%
layout(
title = "GDP pre capita vs. Life Expectancy 1952-2007",
xaxis = list(
type = "log"
),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)'
)
library(dplyr)
library(plotly)
library(gapminder)
gapminder  %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
marker = list(size = ~pop)
) %>%
layout(
title = "GDP pre capita vs. Life Expectancy 1952-2007",
xaxis = list(
type = "log"
),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)'
)
library(xaringan)
library(dplyr)
library(plotly)
library(gapminder)
gapminder  %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
title = "GDP pre capita vs. Life Expectancy 1952-2007",
xaxis = list(
type = "log"
),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)'
)
data.frame(libraries = c("plotly.R", "rbokeh", "trellisopejs", "dygraphs", "ggvis", "ggplot2"),
github_stars = c(2100, 293, 217, 328, 700, 5100),
github_watch = c(287, 35, 11, 42, 128, 318),
forks = c(1600, 65, 35, 196, 185, 1800)) -> viz_data
plot_ly(viz_data, x = ~libraries,
y = ~github_stars, type = "bar",
name = "GitHub Stars", hoverinfo = "text",
text = ~paste0("</br> Library: ", libraries,
"</br> Stars: ", github_stars,
"</br> Watchers: ", github_watch,
"</br> Forks: ", forks)) %>%
add_trace(y = ~forks, name = "GitHub Forks") %>%
add_trace(y = ~github_watch, name = "GitHub Watchers") %>%
layout(
title = "Plotting libraries in R",
xaxis = list(title = "Library"),
yaxis = list(title = "Number of Forks/ Stars/ Watchers"),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)',
autosize = FALSE, width = 550,
height = 400,
margin = list(l = 60,
r = 50,
b = 5,
t = 25,
pad = 5))
inf_mr()
p_gg
fig <- mtcars %>%
plot_ly(x = ~wt) %>%
add_histogram(nbins=10, xbins=list(size=0.5))
fig
fig <- cars %>%
plot_ly(x = ~speed, y = ~dist) %>%
add_markers() %>%
layout(title = list(text = "Speed vs. Distance",
x = 0.1, y = 0.01),
paper_bgcolor = 'rgba(0,0,0,0)',
plot_bgcolor = 'rgba(0,0,0,0)')
fig
library()
library(xaringan)
inf_mr()
infinite_moon_reader()
inf_mr()
library(xaringan)
inf_mr()
library(xaringan)
inf_mr()
